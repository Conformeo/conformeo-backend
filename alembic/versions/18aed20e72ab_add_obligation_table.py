"""Add obligation table

Revision ID: 18aed20e72ab
Revises: f0c7eddfa7a6
Create Date: 2025-07-11 11:55:00.592566

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '18aed20e72ab'
down_revision: Union[str, None] = 'f0c7eddfa7a6'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('sites',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('city', sa.String(), nullable=True),
    sa.Column('zipCode', sa.String(), nullable=True),
    sa.Column('score', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_sites_id'), 'sites', ['id'], unique=False)
    op.create_table('site_documents',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('site_id', sa.Integer(), nullable=True),
    sa.Column('url', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['site_id'], ['sites.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('site_photos',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('site_id', sa.Integer(), nullable=True),
    sa.Column('url', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['site_id'], ['sites.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_index(op.f('ix_duerp_evaluations_company_id'), table_name='duerp_evaluations')
    op.drop_index(op.f('ix_duerp_evaluations_id'), table_name='duerp_evaluations')
    op.drop_table('duerp_evaluations')
    op.drop_constraint(op.f('certifs_user_id_fkey'), 'certifs', type_='foreignkey')
    op.create_foreign_key(None, 'certifs', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint(op.f('checklists_tenant_id_fkey'), 'checklists', type_='foreignkey')
    op.create_foreign_key(None, 'checklists', 'tenants', ['tenant_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint(op.f('gdpr_action_answers_audit_id_fkey'), 'gdpr_action_answers', type_='foreignkey')
    op.drop_constraint(op.f('gdpr_action_answers_action_id_fkey'), 'gdpr_action_answers', type_='foreignkey')
    op.create_foreign_key(None, 'gdpr_action_answers', 'gdpr_actions', ['action_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'gdpr_action_answers', 'rgpd_audits', ['audit_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint(op.f('ouvriers_user_id_fkey'), 'ouvriers', type_='foreignkey')
    op.create_foreign_key(None, 'ouvriers', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint(op.f('rgpd_audit_exigences_exigence_id_fkey'), 'rgpd_audit_exigences', type_='foreignkey')
    op.drop_constraint(op.f('rgpd_audit_exigences_audit_id_fkey'), 'rgpd_audit_exigences', type_='foreignkey')
    op.create_foreign_key(None, 'rgpd_audit_exigences', 'rgpd_exigences', ['exigence_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'rgpd_audit_exigences', 'rgpd_audits', ['audit_id'], ['id'], ondelete='CASCADE')
    op.add_column('securite_controles', sa.Column('site_id', sa.Integer(), nullable=True))
    op.add_column('securite_controles', sa.Column('societe_id', sa.Integer(), nullable=True))
    op.alter_column('securite_controles', 'type',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.create_index(op.f('ix_securite_controles_site_id'), 'securite_controles', ['site_id'], unique=False)
    op.create_index(op.f('ix_securite_controles_societe_id'), 'securite_controles', ['societe_id'], unique=False)
    op.create_index(op.f('ix_securite_controles_user_id'), 'securite_controles', ['user_id'], unique=False)
    op.drop_constraint(op.f('securite_controles_user_id_fkey'), 'securite_controles', type_='foreignkey')
    op.create_foreign_key(None, 'securite_controles', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'securite_controles', 'sites', ['site_id'], ['id'], ondelete='SET NULL')
    op.create_foreign_key(None, 'securite_controles', 'tenants', ['societe_id'], ['id'], ondelete='SET NULL')
    op.drop_constraint(op.f('users_tenant_id_fkey'), 'users', type_='foreignkey')
    op.create_foreign_key(None, 'users', 'tenants', ['tenant_id'], ['id'], ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'users', type_='foreignkey')
    op.create_foreign_key(op.f('users_tenant_id_fkey'), 'users', 'tenants', ['tenant_id'], ['id'])
    op.drop_constraint(None, 'securite_controles', type_='foreignkey')
    op.drop_constraint(None, 'securite_controles', type_='foreignkey')
    op.drop_constraint(None, 'securite_controles', type_='foreignkey')
    op.create_foreign_key(op.f('securite_controles_user_id_fkey'), 'securite_controles', 'users', ['user_id'], ['id'])
    op.drop_index(op.f('ix_securite_controles_user_id'), table_name='securite_controles')
    op.drop_index(op.f('ix_securite_controles_societe_id'), table_name='securite_controles')
    op.drop_index(op.f('ix_securite_controles_site_id'), table_name='securite_controles')
    op.alter_column('securite_controles', 'type',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_column('securite_controles', 'societe_id')
    op.drop_column('securite_controles', 'site_id')
    op.drop_constraint(None, 'rgpd_audit_exigences', type_='foreignkey')
    op.drop_constraint(None, 'rgpd_audit_exigences', type_='foreignkey')
    op.create_foreign_key(op.f('rgpd_audit_exigences_audit_id_fkey'), 'rgpd_audit_exigences', 'rgpd_audits', ['audit_id'], ['id'])
    op.create_foreign_key(op.f('rgpd_audit_exigences_exigence_id_fkey'), 'rgpd_audit_exigences', 'rgpd_exigences', ['exigence_id'], ['id'])
    op.drop_constraint(None, 'ouvriers', type_='foreignkey')
    op.create_foreign_key(op.f('ouvriers_user_id_fkey'), 'ouvriers', 'users', ['user_id'], ['id'])
    op.drop_constraint(None, 'gdpr_action_answers', type_='foreignkey')
    op.drop_constraint(None, 'gdpr_action_answers', type_='foreignkey')
    op.create_foreign_key(op.f('gdpr_action_answers_action_id_fkey'), 'gdpr_action_answers', 'gdpr_actions', ['action_id'], ['id'])
    op.create_foreign_key(op.f('gdpr_action_answers_audit_id_fkey'), 'gdpr_action_answers', 'rgpd_audits', ['audit_id'], ['id'])
    op.drop_constraint(None, 'checklists', type_='foreignkey')
    op.create_foreign_key(op.f('checklists_tenant_id_fkey'), 'checklists', 'tenants', ['tenant_id'], ['id'])
    op.drop_constraint(None, 'certifs', type_='foreignkey')
    op.create_foreign_key(op.f('certifs_user_id_fkey'), 'certifs', 'users', ['user_id'], ['id'])
    op.create_table('duerp_evaluations',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('company_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('statut', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('duerp_evaluations_pkey'))
    )
    op.create_index(op.f('ix_duerp_evaluations_id'), 'duerp_evaluations', ['id'], unique=False)
    op.create_index(op.f('ix_duerp_evaluations_company_id'), 'duerp_evaluations', ['company_id'], unique=False)
    op.drop_table('site_photos')
    op.drop_table('site_documents')
    op.drop_index(op.f('ix_sites_id'), table_name='sites')
    op.drop_table('sites')
    # ### end Alembic commands ###
