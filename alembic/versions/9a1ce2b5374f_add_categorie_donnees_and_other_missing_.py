"""add categorie_donnees and other missing fields to registres

Revision ID: 9a1ce2b5374f
Revises: 0a608bcc9b88
Create Date: 2025-07-12 11:30:28.624457

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '9a1ce2b5374f'
down_revision: Union[str, None] = '0a608bcc9b88'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_dpo_id'), table_name='dpo')
    op.drop_table('dpo')
    op.add_column('registres', sa.Column('categorie_donnees', sa.Text(), nullable=True))
    op.add_column('registres', sa.Column('categorie_personnes', sa.Text(), nullable=True))
    op.add_column('registres', sa.Column('mesures_securite', sa.Text(), nullable=True))
    op.add_column('registres', sa.Column('commentaire', sa.Text(), nullable=True))
    op.alter_column('registres', 'finalite',
               existing_type=sa.VARCHAR(),
               type_=sa.Text(),
               nullable=False)
    op.drop_index(op.f('ix_registers_id'), table_name='registres')
    op.create_index(op.f('ix_registres_id'), 'registres', ['id'], unique=False)
    op.create_index(op.f('ix_registres_user_id'), 'registres', ['user_id'], unique=False)
    op.drop_constraint(op.f('registers_dpo_id_fkey'), 'registres', type_='foreignkey')
    op.drop_constraint(op.f('registers_user_id_fkey'), 'registres', type_='foreignkey')
    op.create_foreign_key(None, 'registres', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_column('registres', 'personnes_concernees')
    op.drop_column('registres', 'dpo_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('registres', sa.Column('dpo_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('registres', sa.Column('personnes_concernees', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'registres', type_='foreignkey')
    op.create_foreign_key(op.f('registers_user_id_fkey'), 'registres', 'users', ['user_id'], ['id'])
    op.create_foreign_key(op.f('registers_dpo_id_fkey'), 'registres', 'dpo', ['dpo_id'], ['id'])
    op.drop_index(op.f('ix_registres_user_id'), table_name='registres')
    op.drop_index(op.f('ix_registres_id'), table_name='registres')
    op.create_index(op.f('ix_registers_id'), 'registres', ['id'], unique=False)
    op.alter_column('registres', 'finalite',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(),
               nullable=True)
    op.drop_column('registres', 'commentaire')
    op.drop_column('registres', 'mesures_securite')
    op.drop_column('registres', 'categorie_personnes')
    op.drop_column('registres', 'categorie_donnees')
    op.create_table('dpo',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('nom', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('telephone', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('designation_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('is_external', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('dpo_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('dpo_pkey'))
    )
    op.create_index(op.f('ix_dpo_id'), 'dpo', ['id'], unique=False)
    # ### end Alembic commands ###
